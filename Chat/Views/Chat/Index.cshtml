@model antapp.Chat.ViewModels.ChatViewModel

@{
    ViewBag.Title = "Chat";
}

@if(Model.Chat is null)
{
    <h3>No chat with this id.</h3>
}
else{
    <h2>@Model.Chat.Chatname</h2>
    <h3 class="text-muted">@Model.Chat.Description</h3>
        @foreach(var x in Model.Entries)
        {
            <div class="card card bg-light mb-3" style="max-width: 90rem;">
                <div class="card-header">@x.UserId</div>
                <div class="card-body">            
                    <p class="card-text">@x.Message</p>
            </div>
            </div>
        }
    <form id="Comment-form">
        <label for="comment" >Leave a comment:</label>
        <textarea name="comment" placeholder="Enter your comment here..." class="form-control"></textarea>
    </form>
        <div class="mt-2 col d-flex justify-content-between">
            <button  class="btn btn-primary" onclick="addComment(@Model.Chat.Id, 'Comment-form')">Post</button>
            <a href="/ChatList"  class="btn btn-outline-info">Back</a>
        </div>

}

<script>
        async function addComment(chatId, formId) {
        const commentForm = document.getElementById(formId);
        const formData = new FormData(commentForm);
        const formProps = Object.fromEntries(formData);
        console.log(formProps.description);
        try {
            const request = {
                chatId: chatId,
                text: formProps.comment
            }
            await fetch('/Chat/AddComment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(request)
            })
            window.location.reload();
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>


